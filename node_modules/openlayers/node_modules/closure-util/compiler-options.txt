 --angular_pass                         : Generate $inject properties for
                                          AngularJS for functions annotated
                                          with @ngInject
 --assume_function_wrapper              : Enable additional optimizations based
                                          on the assumption that the output
                                          will be wrapped with a function
                                          wrapper.  This flag is used to
                                          indicate that "global" declarations
                                          will not actually be global but
                                          instead isolated to the compilation
                                          unit. This enables additional
                                          optimizations.
 --charset VAL                          : Input and output charset for all
                                          files. By default, we accept UTF-8 as
                                          input and output US_ASCII
 --checks_only (--checks-only)          : Don't generate output. Run checks,
                                          but no optimization passes.
 --compilation_level (-O) VAL           : Specifies the compilation level to
                                          use. Options: WHITESPACE_ONLY,
                                          SIMPLE, ADVANCED
 --conformance_configs VAL              : A list of JS Conformance configuration
                                          s in text protocol buffer format.
 --create_source_map VAL                : If specified, a source map file
                                          mapping the generated source files
                                          back to the original source file will
                                          be output to the specified path. The
                                          %outname% placeholder will expand to
                                          the name of the output file that the
                                          source map corresponds to.
 --entry_point VAL                      : A file or namespace to use as the
                                          starting point for determining which
                                          src files to include in the compilatio
                                          n. ES6 and CommonJS modules are
                                          specified as file paths (without the
                                          extension). Closure-library namespaces
                                          are specified with a "goog:" prefix.
                                          Example: --entry_point=goog:goog.Promi
                                          se
 --env [BROWSER | CUSTOM]               : Determines the set of builtin externs
                                          to load. Options: BROWSER, CUSTOM.
                                          Defaults to BROWSER.
 --externs VAL                          : The file containing JavaScript
                                          externs. You may specify multiple
 --generate_exports                     : Generates export code for those
                                          marked with @export
 --help                                 : Displays this message on stdout and
                                          exit
 --hide_warnings_for VAL                : If specified, files whose path
                                          contains this string will have their
                                          warnings hidden. You may specify
                                          multiple.
 --js VAL                               : The JavaScript filename. You may
                                          specify multiple. The flag name is
                                          optional, because args are interpreted
                                          as files by default. You may also use
                                          minimatch-style glob patterns. For
                                          example, use --js='**.js' --js='!**_te
                                          st.js' to recursively include all js
                                          files that do not end in _test.js
 --js_module_root VAL                   : Path prefixes to be removed from ES6
                                          & CommonJS modules.
 --js_output_file VAL                   : Primary output filename. If not
                                          specified, output is written to stdout
 --jscomp_error VAL                     : Make the named class of warnings an
                                          error. Options:accessControls,
                                          ambiguousFunctionDecl, checkEventfulOb
                                          jectDisposal, checkRegExp, checkTypes,
                                          checkVars, conformanceViolations,
                                          const, constantProperty, deprecated,
                                          deprecatedAnnotations, duplicateMessag
                                          e, es3, es5Strict, externsValidation,
                                          fileoverviewTags, globalThis,
                                          internetExplorerChecks, invalidCasts,
                                          misplacedTypeAnnotation, missingGetCss
                                          Name, missingProperties, missingProvid
                                          e, missingRequire, missingReturn,
                                          msgDescriptions, newCheckTypes,
                                          nonStandardJsDocs, reportUnknownTypes,
                                          suspiciousCode, strictModuleDepCheck,
                                          typeInvalidation, undefinedNames,
                                          undefinedVars, unknownDefines,
                                          unnecessaryCasts, unusedLocalVariables
                                          , unusedPrivateMembers, uselessCode,
                                          useOfGoogBase, underscore, visibility.
                                          '*' adds all supported.
 --jscomp_off VAL                       : Turn off the named class of warnings.
                                          Options:accessControls, ambiguousFunct
                                          ionDecl, checkEventfulObjectDisposal,
                                          checkRegExp, checkTypes, checkVars,
                                          conformanceViolations, const,
                                          constantProperty, deprecated,
                                          deprecatedAnnotations, duplicateMessag
                                          e, es3, es5Strict, externsValidation,
                                          fileoverviewTags, globalThis,
                                          internetExplorerChecks, invalidCasts,
                                          misplacedTypeAnnotation, missingGetCss
                                          Name, missingProperties, missingProvid
                                          e, missingRequire, missingReturn,
                                          msgDescriptions, newCheckTypes,
                                          nonStandardJsDocs, reportUnknownTypes,
                                          suspiciousCode, strictModuleDepCheck,
                                          typeInvalidation, undefinedNames,
                                          undefinedVars, unknownDefines,
                                          unnecessaryCasts, unusedLocalVariables
                                          , unusedPrivateMembers, uselessCode,
                                          useOfGoogBase, underscore, visibility.
                                          '*' adds all supported.
 --jscomp_warning VAL                   : Make the named class of warnings a
                                          normal warning. Options:accessControls
                                          , ambiguousFunctionDecl, checkEventful
                                          ObjectDisposal, checkRegExp, checkType
                                          s, checkVars, conformanceViolations,
                                          const, constantProperty, deprecated,
                                          deprecatedAnnotations, duplicateMessag
                                          e, es3, es5Strict, externsValidation,
                                          fileoverviewTags, globalThis,
                                          internetExplorerChecks, invalidCasts,
                                          misplacedTypeAnnotation, missingGetCss
                                          Name, missingProperties, missingProvid
                                          e, missingRequire, missingReturn,
                                          msgDescriptions, newCheckTypes,
                                          nonStandardJsDocs, reportUnknownTypes,
                                          suspiciousCode, strictModuleDepCheck,
                                          typeInvalidation, undefinedNames,
                                          undefinedVars, unknownDefines,
                                          unnecessaryCasts, unusedLocalVariables
                                          , unusedPrivateMembers, uselessCode,
                                          useOfGoogBase, underscore, visibility.
                                          '*' adds all supported.
 --json_streams [NONE | IN | OUT |      : Specifies whether standard input and
 BOTH]                                  : output streams will be a JSON array
                                          of sources. Each source will be an
                                          object of the form {path: filename,
                                          src: file_contents, srcmap: srcmap_con
                                          tents }. Intended for use by stream-ba
                                          sed build systems such as gulpjs.
                                          Options: NONE, IN, OUT, BOTH.
                                          Defaults to NONE.
 --language_in VAL                      : Sets what language spec that input
                                          sources conform. Options: ECMASCRIPT3,
                                          ECMASCRIPT5, ECMASCRIPT5_STRICT,
                                          ECMASCRIPT6 (default), ECMASCRIPT6_STR
                                          ICT, ECMASCRIPT6_TYPED (experimental)
 --language_out VAL                     : Sets what language spec the output
                                          should conform to. Options: ECMASCRIPT
                                          3 (default), ECMASCRIPT5, ECMASCRIPT5_
                                          STRICT, ECMASCRIPT6_TYPED (experimenta
                                          l)
 --module VAL                           : A JavaScript module specification.
                                          The format is <name>:<num-js-files>[:[
                                          <dep>,...][:]]]. Module names must be
                                          unique. Each dep is the name of a
                                          module that this module depends on.
                                          Modules must be listed in dependency
                                          order, and JS source files must be
                                          listed in the corresponding order.
                                          Where --module flags occur in
                                          relation to --js flags is unimportant.
                                          <num-js-files> may be set to 'auto'
                                          for the first module if it has no
                                          dependencies. Provide the value
                                          'auto' to trigger module creation
                                          from CommonJSmodules.
 --module_output_path_prefix VAL        : Prefix for filenames of compiled JS
                                          modules. <module-name>.js will be
                                          appended to this prefix. Directories
                                          will be created as needed. Use with
                                          --module
 --module_wrapper VAL                   : An output wrapper for a JavaScript
                                          module (optional). The format is
                                          <name>:<wrapper>. The module name
                                          must correspond with a module
                                          specified using --module. The wrapper
                                          must contain %s as the code placeholde
                                          r. The %basename% placeholder can
                                          also be used to substitute the base
                                          name of the module output file.
 --new_type_inf                         : Checks for type errors using the new
                                          type inference algorithm.
 --output_manifest VAL                  : Prints out a list of all the files in
                                          the compilation. If --dependency_mode=
                                          STRICT or LOOSE is specified, this
                                          will not include files that got
                                          dropped because they were not
                                          required. The %outname% placeholder
                                          expands to the JS output file. If
                                          you're using modularization, using
                                          %outname% will create a manifest for
                                          each module.
 --output_module_dependencies VAL       : Prints out a JSON file of dependencies
                                          between modules.
 --output_wrapper VAL                   : Interpolate output into this string
                                          at the place denoted by the marker
                                          token %output%. Use marker token
                                          %output|jsstring% to do js string
                                          escaping on the output.
 --polymer_pass                         : Rewrite Polymer classes to be
                                          compiler-friendly.
 --process_closure_primitives           : Processes built-ins from the Closure
                                          library, such as goog.require(),
                                          goog.provide(), and goog.exportSymbol(
                                          ). True by default.
 --process_common_js_modules            : Process CommonJS modules to a
                                          concatenable form.
 --rename_prefix_namespace VAL          : Specifies the name of an object that
                                          will be used to store all non-extern
                                          globals
 --rewrite_polyfills                    : Rewrite ES6 library calls to use
                                          polyfills provided by the compiler's
                                          runtime.
 --source_map_location_mapping VAL      : Source map location mapping separated
                                          by a '|' (i.e. filesystem-path|webserv
                                          er-path)
 --third_party                          : Check source validity but do not
                                          enforce Closure style rules and
                                          conventions
 --transform_amd_modules                : Transform AMD to CommonJS modules.
 --use_types_for_optimization           : Enable or disable the optimizations
                                          based on available type information.
                                          Inaccurate type annotations may
                                          result in incorrect results.
 --version                              : Prints the compiler version to stdout
                                          and exit.
 --warning_level (-W) [QUIET | DEFAULT  : Specifies the warning level to use.
 | VERBOSE]                             : Options: QUIET, DEFAULT, VERBOSE
 --warnings_whitelist_file VAL          : A file containing warnings to
                                          suppress. Each line should be of the
                                          form
                                          <file-name>:<line-number>?  <warning-d
                                          escription>
